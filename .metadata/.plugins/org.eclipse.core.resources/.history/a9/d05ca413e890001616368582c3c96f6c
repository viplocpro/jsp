package forms;

import java.io.*;
import javax.servlet.*;
import javax.servlet.annotation.*;
import javax.servlet.http.*;
import java.net.URLDecoder;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Pattern;

@WebServlet("/room-list")
public class RoomList extends HttpServlet {
	@Override
	public void doGet (HttpServletRequest request, HttpServletResponse response)
		throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		
		HttpSession mySession = request.getSession();
		String username = (String)mySession.getAttribute("user");
		String currentUser = username;
		if (username!=null)
		{
			response.setContentType("text/html;charset=utf-8");
			PrintWriter out = response.getWriter();
			 out.println
		      ("<!DOCTYPE html>"+
		      "<html><head><meta charset=\"utf-8\">"+
		      	"<title>Chat Room Servlet</title>"+
		      	"<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap.min.css\">"+
		      	"<link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap-theme.min.css\">"+
		      	"<link rel=\"stylesheet\" type=\"text/css\" href=\"css/custom.css\">"+
		      	"<script src=\"jquery.min.js\" type=\"text/javascript\"></script>"+
		      	"<script src=\"js/bootstrap.min.js\" type=\"text/javascript\"></script>"+
		      "</head>"
		      + "<body>"
		      + "	<div class=\"container\">"
		      + "		<div class=\"row\">"
		      + "			<div class=\"col-md-4\"></div>"+
		      				"<div class=\"col-md-4 margin-top-10\">"
		      				+ "<div class=\"currentUser\">"
		      				+"<a href=\"#\"><span class=\"glyphicon glyphicon-user\"></span><strong>    "+currentUser+"    </strong></a><form style=\"float:right;\" method=POST action=\"log-out\"><button type=submit class=\"non-btn\">[Thoát]</button></form>"
		      				+"</div>"
		      					+"<div class=\"form-heading\"><h2>Chọn Thế Giới của bạn</h2></div>"
		      				  + "<div class=\"room-select-form\">"
		      				  	+ "<form id=\"roomSelect\" method=POST action=\"room-change\">"
		      				  		+ "<ul class=\"list-group\">"
		      				  		+ "<div class=\"radio\">"
		      				  			+ "<label><li class=\"list-group-item cursor-pointer\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"0\">Nam Rum</li></label>"
		      				  			+ "<label><li class=\"list-group-item cursor-pointer\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"1\">Nữ Rum</li></label>"
		      				  			+ "<label><li class=\"list-group-item cursor-pointer\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"2\">Hẹn Hò Rum</li></label>"
		      				  			+ "<label><li class=\"list-group-item cursor-pointer\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"3\">Teen Rum</li></label>"
		      				  			+ "<label><li class=\"list-group-item cursor-pointer\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"4\">Chung Chung Rum</li></label>"
		      				  		+ "</div>"
		      				  		+ "</ul>"
		      				  + "</form>"
		      			     + "</div>"
		      			     +AlertResult(request,response)
		      			  + "<div></div>"
		      			+ "</div>"
		         +"<div class=\"col-md-4\"></div>"
		      + "</div>"
		   + "</div>"
		+ "</body>"
		   + "</html>");
		}
		
		else
		{
			response.sendRedirect("login");
		}
	}
	
	private String AlertResult(HttpServletRequest request, HttpServletResponse response){

		String alert="";
		String result=request.getParameter("result");
		if (result!=null){
			switch(result){
				case "0": {
		
					return alert="<div class=\"alert alert-danger\">Phải là Nam</div>";
				}
				case "1": {
		
					return alert="<div class=\"alert alert-danger\">Phải là Nữ</div>";
				}
				case "2": {
					return alert="<div class=\"alert alert-danger\">Phải đang ế và 16+</div>";
					
				}
				case "3": {
					return alert="<div class=\"alert alert-danger\">Tuổi teen từ <13,19></div>";
				}
				case "4": {
					return alert;
				}
			}
		}
		return "";
	}
	
	private String RecommendRoom(String result){
		String[] rooms = new String[5];
		String recommend[] = new String[5];
		rooms[0]="<label><li class=\"list-group-item cursor-pointer "+recommend+"\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"0\">Nam Rum</li></label>";
		rooms[1]="<label><li class=\"list-group-item cursor-pointer "+recommend+"\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"1\">Nữ Rum</li></label>";
		rooms[2]="<label><li class=\"list-group-item cursor-pointer "+recommend+"\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"2\">Hẹn Hò Rum</li></label>";
		rooms[3]="<label><li class=\"list-group-item cursor-pointer "+recommend+"\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"3\">Teen Rum</li></label>";
		rooms[4]="<label><li class=\"list-group-item cursor-pointer "+recommend+"\" onclick=\"roomSelect.submit();\"><input name=\"room\" class=\"hidden\" type=radio value=\"4\">Chung Chung Rum</li></label>";
		for (int i=0; i<result.length(); i++)
		{
			Integer.parseInt(Character.toString(result.charAt(i)));
			recommend[i]="alert alert-sucess";
			
		}
		
		return rooms;
	}
	
private String CheckRoomRules(String[] infos, String room,HttpServletResponse response, HttpSession mySession) throws IOException{
		
		String age = infos[2]; //age
		String gender = infos[3]; //gender
		String status = infos[4]; //status
		String result = "4";

		if(gender.equals("1"))
		{
			result+="0";
		}

		if(gender.equals("0"))
		{
			
			result+="1";
		}
		
		if(Integer.parseInt(age)>=13 && Integer.parseInt(age)<=19)
		{
			
			result+="3";
		}	
		
		if(status.equals("0") && Integer.parseInt(age)>=16)
		{
			result+="2";
			
			if(GetUsedTime(infos[0])>=1)
			{
				result="2";
			}//infos[0] la username
			
		}
		
		return result;
	}

	private String[] GetUserInfos(String username){
		String[] userInfos= new String[6];
		BufferedReader br = null;
	
		try 
		{
			String currentLine ="";
			br = new BufferedReader
				    (new InputStreamReader(new FileInputStream("F:\\ChatDatabase.txt"),"UTF-8"));
	
			while ((currentLine = br.readLine()) != null){
				 
				String[] currentInfos = currentLine.split(Pattern.quote("^")); //username co trong database
				String dbUsername = currentInfos[0]; //username
				
				if (dbUsername.equals(username))
				{
					
					try {
						if (br != null)
							br.close();
						return currentInfos;
					} 
					catch (IOException ex) {
						ex.printStackTrace();
					}
					
				}
			}
		} 
		
		catch (IOException e) {
			e.printStackTrace();
	
		} 
		
		finally 
		{
			try {
				if (br != null)
					br.close();
			} 
			
			catch (IOException ex) {
				ex.printStackTrace();
			}
		}	
		
		
		return userInfos;
	}
	
	private int GetUsedTime(String crUsername){
		int usedTime=0;
		int useFrom=0;
		BufferedReader br = null;

		try 
		{
			String currentLine ="";
			br = new BufferedReader(new FileReader("F:\\ChatDatabase.txt"));

			while ((currentLine = br.readLine()) != null){
				String[] current = currentLine.split(Pattern.quote("^")); //username co trong database
				String dbUsername = current[0];
				
				if (dbUsername.equals(crUsername))
				{
					useFrom = Integer.parseInt(current[5].substring(current[5].length()-5,4));
					DateFormat dateFormat = new SimpleDateFormat("yyyy");
				    Date date = new Date();
					
					try {
						if (br != null)
							br.close();
						return usedTime = Integer.parseInt("date")-useFrom;
					} 
					catch (IOException ex) {
						ex.printStackTrace();
					}
				}
					
				}
			
		} 
		
		catch (IOException e) {
			e.printStackTrace();

		} 
		
		finally 
		{
			try {
				if (br != null)
					br.close();
			} 
			
			catch (IOException ex) {
				ex.printStackTrace();
			}
		}	
		
		return usedTime;
	}
	
}

